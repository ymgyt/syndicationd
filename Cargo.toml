[workspace]
exclude  = ["crates/synd_ebpf"]
members  = ["crates/*"]
resolver = "2"

[workspace.package]
authors     = ["ymgyt"]
categories  = ["command-line-utilities"]
description = "terminal feed viewer"
edition     = "2021"
homepage    = "https://docs.syndicationd.ymgyt.io/synd-term/"
keywords    = ["feed", "rss", "atom", "tui"]
license     = "MIT OR Apache-2.0"
readme      = "README.md"
repository  = "https://github.com/ymgyt/syndicationd"

[workspace.dependencies]
anyhow             = { version = "1", default-features = false, features = ["std"] }
assert_cmd         = { version = "2.0.14" }
async-graphql      = { version = "7.0" }
async-trait        = { version = "0.1.81", default-features = false }
axum               = { version = "0.7.5", default-features = false }
axum-server        = { version = "0.6.0", features = ["tls-rustls"] }
bitflags           = { version = "2.6.0", default-features = false }
chrono             = { version = "0.4.38", default-features = false }
clap               = { version = "4.5", default-features = false }
criterion          = { version = "0.5.1", features = ["async_tokio"] }
either             = { version = "1.13.0" }
fake               = { version = "2.9.2", features = ["derive", "chrono"] }
fdlimit            = { version = "0.3.0", default-features = false }
feed-rs            = { version = "1.5", default-features = false }
futures-util       = { version = "0.3.30", default-features = false }
graphql_client     = { version = "0.13.0", default-features = false }
headers            = { version = "0.4.0" }
http               = { version = "0.2" }                                                                                                   # request use 0.2
insta              = { version = "1.39" }
itertools          = { version = "0.13", default-features = false, features = ["use_std"] }
jsonwebtoken       = { version = "9.3.0" }
kvsd               = { version = "0.1.3", default-features = false }
moka               = { version = "0.12.8", features = ["future"] }
octocrab           = { version = "0.38.0", features = ["rustls-webpki-tokio"] }
once_cell          = { version = "1.19.0" }
parse_duration     = { version = "2.1.1" }
pprof              = { version = "0.13", features = ["flamegraph", "criterion"] }
proptest           = { version = "1.5.0" }
rand               = { version = "0.8.5" }
reqwest            = { version = "0.11.27", default-features = false, features = ["rustls-tls", "json"] }
serde              = { version = "1", features = ["derive"] }
serde_json         = { version = "1.0.120" }
tempfile           = { version = "3" }
thiserror          = { version = "1.0.63" }
tokio              = { version = "1.38", default-features = false }
tokio-util         = { version = "0.7.11" }
tracing            = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.18", features = ["smallvec", "fmt", "ansi", "std", "env-filter", "time"], default-features = false }
url                = { version = "2.5.2" }

[profile.bench]
# To enable framegraph
debug = true

[workspace.lints.rust]
unsafe_code = "forbid"

[workspace.lints.clippy]

# cargo
cargo_common_metadata   = "warn"
multiple_crate_versions = "allow"
negative_feature_names  = "warn"
redundant_feature_names = "warn"
wildcard_dependencies   = "warn"

# pedantic
pedantic = "warn"

missing_errors_doc      = "allow"
missing_panics_doc      = "allow"
module_name_repetitions = "allow"
must_use_candidate      = "allow"

[workspace.metadata.crane]
# Required in crane buildDepsOnly derivation
name = "synd"

[workspace.metadata.release]
allow-branch = ["main"]
pre-release-commit-message = "chore: release"
pre-release-replacements = [
  { file = "CHANGELOG.md", search = "unreleased", replace = "v{{version}}" },
  { file = "CHANGELOG.md", search = "__release_date__", replace = "{{date}}" },
  { file = "README.md", search = "/synd-term-v.*/", replace = "/{{crate_name}}-v{{version}}/", min = 0 },
  { file = "README.md", search = "/synd-term-v.*", replace = "/{{crate_name}}-v{{version}}", min = 0 },
]
tag-message = "chore: release {{crate_name}} version {{version}}"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.15.0"
# Skip checking whether the specified configuration files are up to date
# To configure RUSTFLAGS="--cfg tokio_unstable" for tokio metrics
allow-dirty = ["ci"]
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "ymgyt/homebrew-syndicationd"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
publish-jobs = ["homebrew", "npm"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@syndicationd"
# Whether to install an updater program
install-updater = true

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto      = "thin"
